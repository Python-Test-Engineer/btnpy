var rate = {
    dom: {
        container: document.querySelector('#rateContainer'),
        txtRateAsk: document.querySelector('#txtRateAsk'),
        rateYesNo: document.querySelector('#rateYesNo'),
        btnSendFeedback: document.querySelector('#btnSendFeedback')
    },
    storeName: '',
    storeLink: '',

    show: function () {
        this.dom.container.style.display = '';
    },
    respond: function (yes) {
        this.dom.rateYesNo.style.display = 'none';
        if (yes) {
            this._showRateStore();
        } else {
            this.dom.btnSendFeedback.style.display = '';
            this.dom.txtRateAsk.textContent = 'Not satisfied with the results?';
        }

        if (this._getConversionsProperty('token')) {
            //At least 1 record will be updated in DB:
            this._execRequest(yes || '');
        } else {
            //Sometimes, no conversions were started successfully,
            //or there was some js error.
            //Store in GA:
            logEvt('rate_' + (yes ? 'yes' : 'no'), {
                'event_category': 'satisfaction'
            });
        }
    },
    sendFeedback: function () {
        //Append the conversion IDs to the contact form link:
        contact.openWith({
            hs_ticket_category: 'PRODUCT_ISSUE',
            file_conversion_id_or_on_device_conversion_format: this._getConversionsProperty('id')
        });

        this.dom.container.style.display = 'none';
    },
    _execRequest: function (satisfied, attemptCnt = 0) {
        if (attemptCnt > 2) return;

        fetch(ROOT_FOLDER + '/cf_nocache/ajax/rate_conv.php?satisfied=' + satisfied, {
            method: 'POST',
            body: this._getConversionsProperty('token')
        })
        .then(() => {
            toast.show('Thanks for the feedback.', 3000, 'OK', function () {
                toast.hide();
            });
        })
        .catch(err => {
            setTimeout(() => {
                this._execRequest(satisfied, attemptCnt + 1);
            }, 1000);

            console.error(err);
            //Sentry.captureException(err);
        });
    },

    _getAppOrExtStore: function () {
        return storage.get('session', 'twa') || storage.get('session', 'ext') || 'trustpilot';
    },
    _showRateStore: function () {
        if (this._fillStoreName() && storage.get('local', this._getAppOrExtStore() + '_rated') != 1) {
            //Show link to rate

            //Faster - Google Play in-app review:
            if (
                this._getAppOrExtStore() == 'gplay' &&
                storage.get('session', 'twa_version') > 14 &&
                browserCompat.isTWABridgeAvailable()
            ) {
                loadScript(ROOT_FOLDER + '/js/bridgeTWA.js', () => {
                    //Guess if the Android dialog has actually appeared:
                    var startTime = new Date();
                    bridgeTWA.open('gplay-review', () => {
                        var endTime = new Date();
                        if (endTime.getTime() - startTime.getTime() > 1500) {
                            //Took more than 1500ms to refocus TWA
                            //=> user has probably left a review:
                            rate.toStore(true);
                        }
                    });
                });
            }
        } else {
            //Not from app/extension store:
            this.dom.container.style.display = 'none';
        }
        document.querySelector('#linkRate').style.display = '';
    },
    _fillStoreName: function () {
        switch (this._getAppOrExtStore()) {
            case 'gplay':
                this.storeName = 'Google Play';
                this.storeLink = 'https://play.google.com/store/apps/details?id=eu.mconverter.twa';
                break;
            case 'galaxy':
                this.storeName = 'Galaxy Store';
                this.storeLink = 'samsungapps://AppRating/eu.mconverter.twa';
                break;
            case 'mswin':
                this.storeName = 'Microsoft Store';
                this.storeLink = 'ms-windows-store://review/?ProductId=9N4F69HXK2LP';
                break;
            case 'chrome':
                this.storeName = 'Chrome Web Store';
                this.storeLink = 'https://chrome.google.com/webstore/detail/hpjdhhlocahjkhhmcdfbggiegokpljgf/reviews';
                break;
            case 'firefox':
                this.storeName = 'Firefox Add-ons';
                this.storeLink = 'https://addons.mozilla.org/firefox/addon/mconverter/';
                break;
            case 'edge':
                this.storeName = 'Edge Add-ons Store';
                this.storeLink = 'https://microsoftedge.microsoft.com/addons/detail/ooboncopbpgaffaggjkhnnchmhofahhg';
                break;
            case 'opera':
                this.storeName = 'Opera Add-ons Store';
                this.storeLink = 'https://addons.opera.com/en/extensions/details/mconverter-file-converter/';
                break;
            case 'trustpilot':
                this.storeName = 'Trustpilot';
                this.storeLink = 'https://www.trustpilot.com/review/www.mconverter.eu';
                break;
        }
        if (this.storeName) {
            document.querySelector('#txtStoreName').textContent = this.storeName.toUpperCase();
            document.querySelector('#linkRate').href = this.storeLink;
            return true;//can be shown in the UI
        }
        return false;//not installed from a rateable app/extension store
    },
    toStore: function (inApp) {
        storage.set('local', this._getAppOrExtStore() + '_rated', 1);
        logEvt('rate' + (inApp ? '_inapp' : ''), {
            'event_category': 'rating',
            'event_label': 'Rate On ' + this._getAppOrExtStore() + ' Finished Conversion'
        });
        this.dom.container.style.display = 'none';
    },

    _getConversionsProperty: function (prop) {
        var propVals = [], cnt = convertList.conversionData.length;
        for(var i = 0; i < cnt; i++)
            if(convertList.conversionData[i][prop]) propVals.push(convertList.conversionData[i][prop]);
        return propVals.join();//comma-separated
    }
};